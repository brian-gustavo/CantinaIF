package servlet;

import com.google.gson.JsonArray;
import com.google.gson.JsonObject;
import dao.ProductDao;
import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import model.Produto;
import model.ItemCarrinho;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.Base64;
import java.util.HashMap;
import java.util.Map;

@WebServlet("/carrinho")
public class CarrinhoServlet extends HttpServlet {
    private static final long serialVersionUID = 1L;

    // Carrinho armazenado em memória (só para testes ou aplicações simples)
    private static Map<Integer, ItemCarrinho> carrinho = new HashMap<>();

    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {

        JsonArray jsonArray = new JsonArray();

        for (ItemCarrinho item : carrinho.values()) {
            Produto produto = item.getProduto();

            JsonObject itemJson = new JsonObject();
            itemJson.addProperty("id", produto.getId());
            itemJson.addProperty("nome", produto.getNome());
            itemJson.addProperty("descricao", produto.getDescricao());
            itemJson.addProperty("preco", produto.getPreco());
            itemJson.addProperty("quantidade", item.getQuantidade());
            itemJson.addProperty("subtotal", produto.getPreco() * item.getQuantidade());

            // Imagem em Base64
            byte[] imagemBytes = produto.getImagem();
            if (imagemBytes != null) {
                String base64Image = Base64.getEncoder().encodeToString(imagemBytes);
                itemJson.addProperty("imagemBase64", base64Image);
            } else {
                itemJson.addProperty("imagemBase64", "");
            }

            jsonArray.add(itemJson);
        }

        response.setContentType("application/json");
        PrintWriter out = response.getWriter();
        out.print(jsonArray.toString());
        out.flush();
    }

    // Simulação de adição ao carrinho via POST
    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {

        int produtoId = Integer.parseInt(request.getParameter("id"));
        int quantidade = Integer.parseInt(request.getParameter("quantidade"));

        ProductDao dao = new ProductDao();
        Produto produto = dao.buscarPorId(produtoId);

        if (produto != null && quantidade > 0) {
            ItemCarrinho itemExistente = carrinho.get(produtoId);

            if (itemExistente == null) {
                carrinho.put(produtoId, new ItemCarrinho(produto, quantidade));
            } else {
                itemExistente.setQuantidade(itemExistente.getQuantidade() + quantidade);
            }

            response.setStatus(HttpServletResponse.SC_OK);
        } else {
            response.setStatus(HttpServletResponse.SC_BAD_REQUEST);
        }
    }
}
